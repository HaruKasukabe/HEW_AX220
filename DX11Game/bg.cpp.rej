diff a/DX11Game/bg.cpp b/DX11Game/bg.cpp	(rejected hunks)
@@ -3,65 +3,43 @@
 #include "scene.h"
 #include "Texture.h"
 #include "polygon.h"
+#include "sceneGame.h"
 
 // �}�N����`
-#define BG_TEXTURE_PATH_SAMPLE	L"data/texture/sky001.jpg"
-#define BG_TEXTURE_PATH_TITLE	L"data/texture/field000.jpg"
-#define BG_TEXTURE_PATH_GAME	L"data/texture/�_�a.jpg"
+#define BG_TEXTURE_PATH_SAMPLE		L"data/texture/sky001.jpg"
+#define BG_TEXTURE_PATH_TITLE		L"data/texture/field000.jpg"
+#define BG_TEXTURE_PATH_GAME_NOW	L"data/texture/�_�a.jpg"
+#define BG_TEXTURE_PATH_GAME_OLD	L"data/texture/sky001.jpg"
 #define BG_POS_X		0.0f
 #define BG_POS_Y		0.0f
 #define BG_SIZE_X		SCREEN_WIDTH
 #define BG_SIZE_Y		SCREEN_HEIGHT
 
-#define BG_SCROLL_SPEED	(0.5f)
+#define BG_POS_Y_NOW	(180.0f)
+#define BG_POS_Y_OLD	(-BG_POS_Y_NOW)
+#define BG_SCROLL_SPEED	(1.5f)
 
-//// �O���[�o���ϐ�
-//static ID3D11ShaderResourceView* g_pTexture;
-//
-//// ������
-//HRESULT InitBG()
-//{
-//	HRESULT hr = S_OK;
-//	ID3D11Device* pDevice = GetDevice();
-//
-//	// �e�N�X�`���Ǎ�
-//	hr = CreateTextureFromFile(pDevice, PATH_BGTEXTURE, &g_pTexture);
-//
-//	return hr;
-//}
-//
-//// �I������
-//void UninitBG()
-//{
-//	// �w�i�e�N�X�`�����
-//	SAFE_RELEASE(g_pTexture);
-//}
-//
-//// �X�V
-//void UpdateBG()
-//{
-//	// ������Ȃ�
-//}
-//
-//// �`��
-//void DrawBG()
-//{
-//	ID3D11DeviceContext* pDC = GetDeviceContext();
-//	SetPolygonSize(BG_WIDTH, BG_HEIGHT);
-//	SetPolygonPos(BG_POS_X, BG_POS_Y);
-//	SetPolygonTexture(g_pTexture);
-//	SetPolygonUV(0.0f, 0.0f);
-//	DrawPolygon(pDC);
-//}
+// �\����
+static LPCWSTR g_BgTex[] = {
+	BG_TEXTURE_PATH_GAME_NOW,
+	BG_TEXTURE_PATH_GAME_OLD,
+};
 
+//�O���[�o���ϐ�
+XMFLOAT3 g_girlMove;
+XMFLOAT3 g_boyMove;
 
 //==============================================================
 //�ݽ�׸�
 //==============================================================
 BG::BG()
 	:m_pos(XMFLOAT2(BG_POS_X, BG_POS_Y))
-	,m_pos2(XMFLOAT2(BG_SIZE_X, BG_POS_Y))
+	,m_posNow(XMFLOAT2(BG_POS_X, BG_POS_Y_NOW))
+	,m_posNow2(XMFLOAT2(BG_SIZE_X - 10.0f, BG_POS_Y_NOW))
+	,m_posOld(XMFLOAT2(BG_POS_X, BG_POS_Y_OLD))
+	,m_posOld2(XMFLOAT2(BG_SIZE_X - 10.0f, BG_POS_Y_OLD))
 	,m_size(XMFLOAT2(BG_SIZE_X, BG_SIZE_Y))
+	,m_sizeGame(XMFLOAT2(BG_SIZE_X, BG_SIZE_Y / 2))
 {
 	//�e�N�X�`���ǂݍ���
 	HRESULT hr = S_OK;
@@ -86,23 +65,52 @@
 //==============================================================
 BG::~BG() {
 	//�e�N�X�`�����
-	SAFE_RELEASE(m_pTexture);
+	switch (GetScene())
+	{
+	default:
+		SAFE_RELEASE(m_pTexture[0]);
+		break;
+	case SCENE_GAME:
+		for (int i = 0; i < 2; i++)
+			SAFE_RELEASE(m_pTexture[i]);
+		break;
+	}
 }
 //==============================================================
 //�X�V
 //==============================================================
-void BG::Update() {
+void BG::Update(int nTime) {
 	switch (GetScene())
 	{
 	case SCENE_GAME:
-		// �w�i�̍��W����Z�b�g
-		if (m_pos.x <= -BG_SIZE_X)
-			m_pos.x = BG_SIZE_X;
-		if (m_pos2.x <= -BG_SIZE_X)
-			m_pos2.x = BG_SIZE_X;
+		// ���̎q�̈ړ��ʂ�擾
+		g_girlMove = GetNow()->GetPlayerGirl()->GetGirlMove();
+		// �j�̎q�̈ړ��ʂ�擾
+		g_boyMove = GetOld()->GetPlayerBoy()->GetBoyMove();
+
+		switch (nTime)
+		{
+		case 0:
+			// �w�i�̍��W����Z�b�g
+			if (m_posNow.x <= -BG_SIZE_X)
+				m_posNow.x = BG_SIZE_X - 10.0f;
+			if (m_posNow2.x <= -BG_SIZE_X)
+				m_posNow2.x = BG_SIZE_X - 10.0f;
 
-		m_pos.x -= BG_SCROLL_SPEED;
-		m_pos2.x -= BG_SCROLL_SPEED;
+			m_posNow.x -= g_girlMove.x * BG_SCROLL_SPEED;
+			m_posNow2.x -= g_girlMove.x * BG_SCROLL_SPEED;
+			break;
+		case 1:
+			// �w�i�̍��W����Z�b�g
+			if (m_posOld.x <= -BG_SIZE_X)
+				m_posOld.x = BG_SIZE_X - 10.0f;
+			if (m_posOld2.x <= -BG_SIZE_X)
+				m_posOld2.x = BG_SIZE_X - 10.0f;
+
+			m_posOld.x -= g_boyMove.x * BG_SCROLL_SPEED;
+			m_posOld2.x -= g_boyMove.x * BG_SCROLL_SPEED;
+			break;
+		}
 		break;
 	default:
 		break;
@@ -113,19 +121,40 @@
 //==============================================================
 void BG::Draw() {
 	ID3D11DeviceContext* pDC = GetDeviceContext();
-	SetPolygonSize(m_size.x, m_size.y);
-	SetPolygonPos(m_pos.x, m_pos.y);
-	SetPolygonTexture(m_pTexture);
-	SetPolygonUV(0.0f, 0.0f);
-	DrawPolygon(pDC);
+	switch (GetScene())
+	{
+	default:
+		SetPolygonSize(m_size.x, m_size.y);
+		SetPolygonPos(m_pos.x, m_pos.y);
+		SetPolygonTexture(m_pTexture[0]);
+		SetPolygonUV(0.0f, 0.0f);
+		DrawPolygon(pDC);
+		break;
 
-	if (!GetScene() == SCENE_GAME)
-		return;
-	SetPolygonSize(m_size.x, m_size.y);
-	SetPolygonPos(m_pos2.x, m_pos2.y);
-	SetPolygonTexture(m_pTexture);
-	SetPolygonUV(0.0f, 0.0f);
-	DrawPolygon(pDC);
+	case SCENE_GAME:
+		// ���̕`��
+		SetPolygonSize(m_sizeGame.x, m_sizeGame.y);
+		SetPolygonPos(m_posNow.x, m_posNow.y);
+		SetPolygonTexture(m_pTexture[0]);
+		SetPolygonUV(0.0f, 0.0f);
+		DrawPolygon(pDC);
+		SetPolygonSize(m_sizeGame.x, m_sizeGame.y);
+		SetPolygonPos(m_posNow2.x, m_posNow2.y);
+		SetPolygonTexture(m_pTexture[0]);
+		SetPolygonUV(0.0f, 0.0f);
+		DrawPolygon(pDC);
 
-	//���ɖ߂�
+		// �ߋ��̔w�i�`��
+		SetPolygonSize(m_sizeGame.x, m_sizeGame.y);
+		SetPolygonPos(m_posOld.x, m_posOld.y);
+		SetPolygonTexture(m_pTexture[1]);
+		SetPolygonUV(0.0f, 0.0f);
+		DrawPolygon(pDC);
+		SetPolygonSize(m_sizeGame.x, m_sizeGame.y);
+		SetPolygonPos(m_posOld2.x, m_posOld2.y);
+		SetPolygonTexture(m_pTexture[1]);
+		SetPolygonUV(0.0f, 0.0f);
+		DrawPolygon(pDC);
+		break;
+	}
 }
